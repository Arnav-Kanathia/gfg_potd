class Solution{
public:
    int solve(int n, int w, int val[], int wt[], vector<vector<int>>& dp){
        if(n == 0 || w == 0) return 0;
        else if(dp[n][w] != -1) return dp[n][w];
        
        if(wt[n-1] <= w) return dp[n][w] = max(solve(n, w-wt[n-1], val, wt, dp) + val[n-1], solve(n-1, w, val, wt, dp));
        else return dp[n][w] = solve(n-1, w, val, wt, dp);
        
    }
    
    int knapSack(int N, int W, int val[], int wt[])
    {
        vector<vector<int>>  dp(N+1, vector<int>(W+1, -1));
        return solve(N, W, val, wt, dp);
    }
};
