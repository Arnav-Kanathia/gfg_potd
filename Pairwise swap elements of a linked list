class Solution
{
    public:
    Node* pairWiseSwap(struct Node* head) 
    {
        if(head == nullptr or head -> next == nullptr)
            return head;
            
        Node * first = head;
        Node * second = head -> next;
        
        head = second;
        
        while(first != nullptr and second != nullptr){
            Node * temp = second -> next;
            second -> next = first;
            
            if(temp == nullptr or temp -> next == nullptr)
                first -> next = temp;
            else
                first -> next = temp -> next;
                
            first = temp;
            if(temp != nullptr)
                second = first -> next;
            else
                second = nullptr;
        }
        
        return head;
    }
};
